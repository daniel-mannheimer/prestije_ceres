{{ component( "Legend::Item.Components.VariationSelect" ) }}
{{ component( "Ceres::Item.Components.ItemImageCarousel" ) }}
{{ component( "Legend::Item.Components.AddToWishList" ) }}
{{ component( "Ceres::Item.Components.OrderProperties" ) }}
{{ component( "Ceres::Item.Components.OrderPropertyList" ) }}
{{ component( "Legend::Item.Components.SingleItem" ) }}
{{ component( "Legend::Item.Components.GraduatedPrices" ) }}
{{ component( "Legend::Basket.Components.AddToBasket" ) }}
{{ component( "Ceres::Item.Components.ItemBundle" ) }}

{% set freeFields = getFree(item.documents[0].data.item.id) %}

<single-item v-cloak template="#vue-single-item" item-data="{{ item | json_data }}" variation-list-data="{{ variations | json_data }}" :attribute-name-map="{{attributeNameMap | json_encode}}" :variation-units="{{variationUnits | json_encode}}">
    <template #before-price>{{ LayoutContainer.show("Ceres::SingleItem.BeforePrice", item.documents[0].data) }}</template>
    <template #after-price>{{ LayoutContainer.show("Ceres::SingleItem.AfterPrice", item.documents[0].data) }}</template>
    <template #before-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.BeforeAddToBasket", item.documents[0].data) }}</template>
    <template #after-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.AfterAddToBasket", item.documents[0].data) }}</template>
    <template #additional-content-after-add-to-basket>{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterAddToBasket", item.documents[0].data) }}</template>
    <template #additional-content-after-vat>{{ LayoutContainer.show("Ceres::SingleItem.AdditionalContentAfterVAT", item.documents[0].data) }}</template>
    <template #add-detail-tabs>{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabs", item.documents[0].data) }}</template>
    <template #add-detail-tabs-content>{{ LayoutContainer.show("Ceres::SingleItem.AddDetailTabsContent", item.documents[0].data) }}</template>
    <template #item-list-container>{{ LayoutContainer.show("Ceres::SingleItem.ItemListContainer", item) }}</template>
    <template #feedback-container>{{ LayoutContainer.show("Ceres::SingleItem.FeedbackContainer", item) }}</template>
    <template #image-carousel>
        {% set ImageCarouselOverride = LayoutContainer.show("Ceres::SingleItem.ImageCarousel") %}
        {% if ImageCarouselOverride|trim is empty %}
            <item-image-carousel image-url-accessor="url" template="#vue-item-image-carousel"></item-image-carousel>
        {% else %}
            {{ ImageCarouselOverride }}
        {% endif %}
        {% if freeFields.free1|trim is not empty %}
            <a class="fvideo-open-button" href="#video-modal" data-toggle="modal" data-target="#video-modal"><i class="fa fa-play-circle"></i><span class="text">{{ trans("PrestijeLegend::Template.singleItemVideoButtonText") }}</span></a>
        {% endif %}
    </template>
</single-item>

{% if freeFields.free1|trim is not empty %}
<div class="modal fade video-modal" id="video-modal" tabindex="-1" role="dialog">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-body">
              <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
              <div class="video-modal-container">
                <video class="video-popup-video" controls>
                    <source src="{{ freeFields.free1 }}" type="video/mp4">
                </video>
              </div>
          </div>
      </div>
  </div>
</div>
{% endif %}