{% extends getPartial('page-design') %}
{% import "Ceres::PageDesign.Macros.LayoutContainer" as LayoutContainer %}
{% import "Ceres::Category.Macros.CategoryTree" as Tree %}

{% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}

{% block PageBody %}

    {{ component( "Legend::ItemList.Components.CategoryItem") }}
    {{ component( "Legend::ItemList.Components.Filter.ItemFilterList") }}
    {{ component( "Legend::ItemList.Components.Filter.ItemFilterTagList") }}

    <div class="categoriegrid page-content container-max">
        <div class="row">
            {% if ceresConfig.header.showNavBars in ["side", "both"] %}
                <div class="col-12 col-lg-3 customf-side-bar hidden-md-down">
                    <div class="customf-side-bar-header text-right d-lg-none">
                        <span class="customf-side-bar-close"><i class="fa fa-times"></i></span>
                    </div>

                    <div class="sidebar-categories">
                        <div class="category-title-side" data-pl-collapse="category-list">{{ trans("Ceres::Template.itemCategories") }} <i class="pl-material pl-chevron-up"></i></div>
                        <div class="pl-collapsable pb-3" data-pl-cl="category-list">
                            {{ include('Ceres::PageDesign.Partials.Header.SideNavigation.twig') }}
                        </div>
                    </div>

                    {% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}
                    {% if overrideSearchFilters | trim is empty %}
                        <item-filter-list template="#vue-item-filter-list-side" :facet-data="{{ facets | json_encode }}"></item-filter-list>
                    {% else %}
                        {{ overrideSearchFilters }}
                    {% endif %}

                    {{ LayoutContainer.show("Ceres::CategoryItem.SideNavBarBottom") }}
                </div>

            {% endif %}

            <div class="col-12 col-lg-{% if ceresConfig.header.showNavBars in ["side", "both"] %}9{% else %}12{% endif %}">

                {% if category is defined and ceresConfig.item.showCategoryImage %}
                    {% include "Legend::Category.Item.Partials.CategoryParallaxImage" with { 'category': category } %}
                {% endif %}

                {% if category is defined and ceresConfig.item.showCategoryDescriptionTop in ["description1", "description2", "both"] %}
                <div class="row mt-3">
                    <div class="col-12">
                        {% if ceresConfig.item.showCategoryDescriptionTop in ["description1", "both"] and category.details[0].description | trim is not empty %}
                            <div class="category-description mb-3">{{ category.details[0].description | raw }}</div>
                        {% endif %}
                        {% if ceresConfig.item.showCategoryDescriptionTop in ["description2", "both"] and category.details[0].description2 | trim is not empty %}
                            <div class="category-description mb-3">{{ category.details[0].description2 | raw }}</div>
                        {% endif %}
                    </div>
                </div>
                {% endif %}

                <div id="isParallaxImg" class="list-controls {% if (not ceresConfig.item.showCategoryImage) or (category.details[0].imagePath is empty) %}no-parallax-img {% endif %}mt-5 mb-5">
                    <div class="list-controls-inner">
                        <div class="row">
                            {# <div class="col-12 col-md-6">
                                <h1 class="h3 category-title">{{ category.details[0].name }}</h1>
                            </div> #}
                            <div class="col-12 text-right">
                                <div class="list-wrapper">
                                    {% include "Ceres::Category.Item.Partials.ItemSorting" with { 'sortingData': searchOptions.sorting, 'selectedSorting': itemSorting } %}

                                    {% include "Ceres::Category.Item.Partials.ItemsPerPage" with { 'itemsPerPage': searchOptions.itemsPerPage, 'selectedValue': itemsPerPage } %}

                                    {% if ceresConfig.header.showNavBars not in ["side", "both"] %}
                                        {% set overrideSearchFilters = LayoutContainer.show("Ceres::Search.Filter", facets ) %}
                                        {% if overrideSearchFilters | trim is empty %}
                                            <item-filter-list :facet-data="{{ facets | json_encode }}">
                                                {% if facets | length > 0 %}
                                                    <a class="btn btn-link filter-toggle" href="#filterCollapse">
                                                        <i class="fa fa-sliders default-float" aria-hidden="true"></i> {{ trans("Ceres::Template.itemFilter") }}
                                                    </a>
                                                {% endif %}
                                            </item-filter-list>
                                        {% else %}
                                            {{ overrideSearchFilters }}
                                        {% endif %}
                                    {% else %}
                                        {% if facets|length > 0 %}
                                            <div class="filter-wrapper text-left d-lg-none">
                                                <a class="btn btn-link filter-toggle fake-filter-toggle" href="#">
                                                    <i class="fa fa-sliders default-float" aria-hidden="true"></i> {{ trans("Ceres::Template.itemFilter") }}
                                                </a>
                                            </div>
                                        {% endif %}
                                    {% endif %}

                                    {{ LayoutContainer.show("PrestijeLegend::CategoryItem.FindologicFilters") }}
                                </div>
                            </div>
                        </div>
                        <div class="row">
                             <div class="col-12">
                                {# TAGS #}
                                <item-filter-tag-list></item-filter-tag-list>
                             </div>
                        </div>
                    </div>
                </div>

                {% if ceresConfig.pagination.position in ['top', 'top_bottom'] %}
                    <div class="list-controls mb-5 row">
                        <div class="col-12">
                            {% include "Legend::Category.Item.Partials.Pagination" %}
                        </div>
                    </div>
                {% endif %}

                <ul class="product-list row grid">
                    {% for item in itemList %}
                        <li class="col-12 col-sm-6 col-md-4 col-lg-{% if ceresConfig.header.showNavBars in ["side", "both"] %}4{% else %}3{% endif %}">
                            <category-item
                                :item-data="{{ item.data | json_encode }}"
                                :decimal-count="{{ ceresConfig.item.storeSpecial }}">
                                <template #before-prices>{{ LayoutContainer.show("Ceres::CategoryItem.BeforePrices", item.data) }}</template>
                                <template #after-prices>{{ LayoutContainer.show("Ceres::CategoryItem.AfterPrices", item.data) }}</template>

                                <a href="{{ item.data | itemURL }}" class="small">
                                    <i class="fa fa-image"></i>
                                    <span>{{ item.data | itemName }}</span>
                                </a>
                            </category-item>
                        </li>
                    {% endfor %}
                </ul>

                {% if category is not defined and itemList is empty %}
                    <p class="h3 mb-5 text-center">{{ trans("Ceres::Template.itemSearchNoResults", {"searchString": searchString}) }}</p>
                {% endif %}

                {% if ceresConfig.pagination.position in ['bottom', 'top_bottom'] %}
                    <div class="list-controls mb-5 row">
                        <div class="col-12">
                            {% include "Legend::Category.Item.Partials.Pagination" %}
                        </div>
                    </div>
                {% endif %}

                {% if category is defined and ceresConfig.item.showCategoryDescriptionBottom in ["description1", "description2", "both"]  %}
                    {% if category.details[0].description | trim is not empty or category.details[0].description2 | trim is not empty %}
                    <div class="category-desc">
                        <div class="row mb-5">
                            <div class="col-12">
                                {% if ceresConfig.item.showCategoryDescriptionBottom in ["description1", "both"] and category.details[0].description | trim is not empty %}
                                    <div class="category-description mb-3">{{ category.details[0].description | raw }}</div>
                                {% endif %}
                                {% if ceresConfig.item.showCategoryDescriptionBottom in ["description2", "both"] and category.details[0].description2 | trim is not empty %}
                                    <div class="category-description mb-3">{{ category.details[0].description2 | raw }}</div>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                    {% endif %}
                {% endif %}

            </div>
        </div>
    </div>

{% endblock %}

{% block PartialHead %}
    <script type="application/ld+json">{"@context": "http://schema.org","@type": "WebSite","url": "{{ webstoreConfig.domainSsl }}","potentialAction":{"@type": "SearchAction","target": "{{ webstoreConfig.domainSsl ~ urls.search }}?query={search_term}","query-input": "required name=search_term"}}</script>

    {% set canonicalUrl = services.url.getCanonicalURL() %}
    {% if currentPage - 1 > 0 %}
        <link rel="prev" href="{{ canonicalUrl ~ queryString({'page': currentPage - 1}) }}" />
    {% endif %}

    {% if currentPage + 1 <= pageMax %}
        <link rel="next" href="{{ canonicalUrl ~ queryString({'page': currentPage + 1}) }}" />
    {% endif %}

    {% if category is defined %}
        <title>{% if category.details[0].metaTitle %}{{ category.details[0].metaTitle }}{% else %}{{ category.details[0].name }}{% endif %} | {{ trans("Ceres::Template.headerCompanyName") }}</title>
        <meta name="description" content="{{ category.details[0].metaDescription }}">
        <meta name="keywords" content="{{ category.details[0].metaKeywords }}">
        <meta name="robots" content="{% if forceNoIndex or (currentPage >= config("Ceres.pagination.noIndex") and config("Ceres.pagination.noIndex") != 0 )%}NOINDEX{% else %}{{ metaRobots }}{% endif %}">
    {% else %}
        <meta name="robots" content="{{ config("Ceres.meta.robots_search_result") }}">
        <title>{{ trans("Ceres::Template.itemSearchResults") }} {{ searchString }} | {{ trans("Ceres::Template.headerCompanyName") }}</title>
    {% endif %}
{% endblock %}
